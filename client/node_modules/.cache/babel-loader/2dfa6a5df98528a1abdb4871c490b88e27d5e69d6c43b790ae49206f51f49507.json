{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Skuldier\\\\Documents\\\\Pokemon Emerald Helper\\\\pokemon-companion\\\\client\\\\src\\\\components\\\\TypeEffectiveness.js\";\nimport React from 'react';\nimport './TypeEffectiveness.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TypeEffectiveness({\n  effectiveness\n}) {\n  const {\n    attacking,\n    defending\n  } = effectiveness;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"type-effectiveness\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Type Matchup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"effectiveness-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Your Attack Effectiveness\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), Object.entries(attacking).map(([type, multiplier]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"effectiveness-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `type-badge type-${type}`,\n          children: type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `multiplier mult-${multiplier}`,\n          children: multiplier === 0 ? 'No Effect' : `${multiplier}x`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)]\n      }, type, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"effectiveness-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Enemy Weaknesses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), defending.weakTo.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"type-list\",\n        children: defending.weakTo.map(type => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `type-badge type-${type}`,\n          children: type\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-types\",\n        children: \"No weaknesses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"effectiveness-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Enemy Resistances\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), defending.resists.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"type-list\",\n        children: defending.resists.map(type => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `type-badge type-${type}`,\n          children: type\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-types\",\n        children: \"No resistances\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), defending.immuneTo.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"effectiveness-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Enemy Immunities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"type-list\",\n        children: defending.immuneTo.map(type => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `type-badge type-${type}`,\n          children: type\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = TypeEffectiveness;\nexport default TypeEffectiveness;\nvar _c;\n$RefreshReg$(_c, \"TypeEffectiveness\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TypeEffectiveness","effectiveness","attacking","defending","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","type","multiplier","weakTo","length","resists","immuneTo","_c","$RefreshReg$"],"sources":["C:/Users/Skuldier/Documents/Pokemon Emerald Helper/pokemon-companion/client/src/components/TypeEffectiveness.js"],"sourcesContent":["import React from 'react';\r\nimport './TypeEffectiveness.css';\r\n\r\nfunction TypeEffectiveness({ effectiveness }) {\r\n  const { attacking, defending } = effectiveness;\r\n\r\n  return (\r\n    <div className=\"type-effectiveness\">\r\n      <h3>Type Matchup</h3>\r\n      \r\n      <div className=\"effectiveness-section\">\r\n        <h4>Your Attack Effectiveness</h4>\r\n        {Object.entries(attacking).map(([type, multiplier]) => (\r\n          <div key={type} className=\"effectiveness-item\">\r\n            <span className={`type-badge type-${type}`}>{type}</span>\r\n            <span className={`multiplier mult-${multiplier}`}>\r\n              {multiplier === 0 ? 'No Effect' : `${multiplier}x`}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"effectiveness-section\">\r\n        <h4>Enemy Weaknesses</h4>\r\n        {defending.weakTo.length > 0 ? (\r\n          <div className=\"type-list\">\r\n            {defending.weakTo.map(type => (\r\n              <span key={type} className={`type-badge type-${type}`}>\r\n                {type}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p className=\"no-types\">No weaknesses</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"effectiveness-section\">\r\n        <h4>Enemy Resistances</h4>\r\n        {defending.resists.length > 0 ? (\r\n          <div className=\"type-list\">\r\n            {defending.resists.map(type => (\r\n              <span key={type} className={`type-badge type-${type}`}>\r\n                {type}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p className=\"no-types\">No resistances</p>\r\n        )}\r\n      </div>\r\n\r\n      {defending.immuneTo.length > 0 && (\r\n        <div className=\"effectiveness-section\">\r\n          <h4>Enemy Immunities</h4>\r\n          <div className=\"type-list\">\r\n            {defending.immuneTo.map(type => (\r\n              <span key={type} className={`type-badge type-${type}`}>\r\n                {type}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TypeEffectiveness;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}